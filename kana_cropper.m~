images = dir('cropped_kana/*.jpg');

for j=1:length(images)
    [I, map] = imread(strcat('individual_kana/',getfield(images(j),'name')));

    %Binarization
    %turn image into black and white
    BW = im2bw(I, 0.9);
    inv_BW = 1-BW;

    %horizontal pixel scan, find top/bottom of each row (any row with a black pixel)
    BW_row_sum = sum(inv_BW,2);

    for n=1:length(BW_row_sum)
        if BW_row_sum(n)~=0
            row_start = n;
            break;
        end
    end
    
    for n=length(BW_row_sum):-1:1
        if BW_row_sum(n)~=0
            row_end = n;
            break;
        end
    end
    % edge case, if row ends at bottom of image, need to save final row_end
    % index
    if BW_row_sum(length(BW_row_sum))>0
        row_end = [row_end length(BW_row_sum)];
    end

    BW_col_sum = sum(BW);

    for n=1:length(BW_col_sum)
        if BW_col_sum(n)~=0
            col_start = n;
        end
    end
    
    for n=length(BW_col_sum):-1:1
        if BW_col_sum(n)~=0
            col_start = n;
        end
    end

        % edge case, if row ends at bottom of image, need to save final row_end
        % index
        if BW_col_sum(length(BW_col_sum))>0
            col_end{m} = [col_end{m} length(BW_col_sum)];
        end
    end

    %draw bounding boxes
    bboxes = [];
    for n=1:length(row_start)
        for m=1:length(col_start{n})
            bboxes=[bboxes; col_start{n}(m) row_start(n) col_end{n}(m) row_end(n)];
        end
    end
    subplot(5, 10, j);
    showboxes(BW,bboxes,map);

    %Character recognition
    %
end